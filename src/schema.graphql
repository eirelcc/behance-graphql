# import Appreciation, Collection, Comment, Field, Link, Project, User, UserStatsByPeriod, Wip, WorkExperience from "./generated/prisma.graphql"

type Query {
    projects(params: ProjectsInput): [Project!]!
    project(id: ID!): Project!
    creativeFields: [Field!]!
    creativesToFollow: [User!]!
    collections(params: CollectionsInput): [Collection!]!
    collection(id: ID!): Collection!
    users(params: UsersInput): [User!]
    user(id: ID!): User!
}

type Mutation {
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
}

type AuthPayload {
    token: String
    user: User
}

input ProjectsInput {
    q: String

    """
    ProjectSortBy: featured_date, appreciations, views, comments, published_date
    """
    sort: String

    """
    Period: all, today, week, month
    """
    time: String

    field: String
    country: String
    state: String
    city: String
    page: Int
    tags: String
    color_hex: String
    color_range: Int
    license: String
}

input UsersInput {
    q: String
    field: String
    country: String
    state: String
    city: String
    page: Int
    tags: String

    """
    UserSortBy: featured_date, appreciations, views, comments, published_date, followed
    """
    sort: String
}

input CollectionsInput {
    q: String
    """
    Period: all, today, week, month
    """
    time: String
    page: String
    """
    CollectionSortBy: comments, views, last_item_added_date
    """
    sort: String
}

# input UserProjectsInput {
#     sort: ProjectSortBy
#     time: Period
#     page: Int
# }

# input UserCollectionsInput {
#     time: Period
#     page: String
#     sort: CollectionSortBy
# }

# input UserFollowersInput {
#     page: String
#     sort: UserFollowerSortBy
#     sort_order: SortOrder
#     per_page: Int
# }

# enum Period {
#     all
#     today
#     week
#     month
# }

# enum ProjectSortBy {
#     featured_date
#     appreciations
#     views
#     comments
#     published_date
# }

# enum UserFollowerSortBy {
#     created_date
#     appreciations
#     views
#     comments
#     followed
#     alpha
# }

# enum CollectionSortBy {
#     comments
#     views
#     last_item_added_date
# }

# enum SortOrder {
#     asc
#     desc
# }
