# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Owner implements Node {
  id: ID!
  first_name: String!
  last_name: String!
  username: String!
  city: String
  state: String
  country: String
  company: String
  occupation: String
  created_on: Int!
  url: String!
  display_name: String!
  images: [String!]
  fields: [String!]
}

type Project implements Node {
  id: ID!
  name: String!
  published_on: Int!
  created_on: Int!
  modified_on: Int!
  url: String!
  fields: [String!]
  mature_content: Int!
  owners(where: OwnerWhereInput, orderBy: OwnerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Owner!]
  stats(where: StatsWhereInput): Stats!
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  password: String!
}


#
# Other Types
#

type AggregateOwner {
  count: Int!
}

type AggregateProject {
  count: Int!
}

type AggregateStats {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createProject(data: ProjectCreateInput!): Project!
  createOwner(data: OwnerCreateInput!): Owner!
  createStats(data: StatsCreateInput!): Stats!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateProject(data: ProjectUpdateInput!, where: ProjectWhereUniqueInput!): Project
  updateOwner(data: OwnerUpdateInput!, where: OwnerWhereUniqueInput!): Owner
  deleteUser(where: UserWhereUniqueInput!): User
  deleteProject(where: ProjectWhereUniqueInput!): Project
  deleteOwner(where: OwnerWhereUniqueInput!): Owner
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertProject(where: ProjectWhereUniqueInput!, create: ProjectCreateInput!, update: ProjectUpdateInput!): Project!
  upsertOwner(where: OwnerWhereUniqueInput!, create: OwnerCreateInput!, update: OwnerUpdateInput!): Owner!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!
  updateManyProjects(data: ProjectUpdateInput!, where: ProjectWhereInput!): BatchPayload!
  updateManyOwners(data: OwnerUpdateInput!, where: OwnerWhereInput!): BatchPayload!
  updateManyStatses(data: StatsUpdateInput!, where: StatsWhereInput!): BatchPayload!
  deleteManyUsers(where: UserWhereInput!): BatchPayload!
  deleteManyProjects(where: ProjectWhereInput!): BatchPayload!
  deleteManyOwners(where: OwnerWhereInput!): BatchPayload!
  deleteManyStatses(where: StatsWhereInput!): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
A connection to a list of items.
"""
type OwnerConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [OwnerEdge]!
  aggregate: AggregateOwner!
}

input OwnerCreatefieldsInput {
  set: [String!]
}

input OwnerCreateimagesInput {
  set: [String!]
}

input OwnerCreateInput {
  first_name: String!
  last_name: String!
  username: String!
  city: String
  state: String
  country: String
  company: String
  occupation: String
  created_on: Int!
  url: String!
  display_name: String!
  images: OwnerCreateimagesInput
  fields: OwnerCreatefieldsInput
}

input OwnerCreateManyInput {
  create: [OwnerCreateInput!]
  connect: [OwnerWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type OwnerEdge {
  """
  The item at the end of the edge.
  """
  node: Owner!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum OwnerOrderByInput {
  id_ASC
  id_DESC
  first_name_ASC
  first_name_DESC
  last_name_ASC
  last_name_DESC
  username_ASC
  username_DESC
  city_ASC
  city_DESC
  state_ASC
  state_DESC
  country_ASC
  country_DESC
  company_ASC
  company_DESC
  occupation_ASC
  occupation_DESC
  created_on_ASC
  created_on_DESC
  url_ASC
  url_DESC
  display_name_ASC
  display_name_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type OwnerPreviousValues {
  id: ID!
  first_name: String!
  last_name: String!
  username: String!
  city: String
  state: String
  country: String
  company: String
  occupation: String
  created_on: Int!
  url: String!
  display_name: String!
  images: [String!]
  fields: [String!]
}

type OwnerSubscriptionPayload {
  mutation: MutationType!
  node: Owner
  updatedFields: [String!]
  previousValues: OwnerPreviousValues
}

input OwnerSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [OwnerSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [OwnerSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: OwnerWhereInput
}

input OwnerUpdateDataInput {
  first_name: String
  last_name: String
  username: String
  city: String
  state: String
  country: String
  company: String
  occupation: String
  created_on: Int
  url: String
  display_name: String
  images: OwnerUpdateimagesInput
  fields: OwnerUpdatefieldsInput
}

input OwnerUpdatefieldsInput {
  set: [String!]
}

input OwnerUpdateimagesInput {
  set: [String!]
}

input OwnerUpdateInput {
  first_name: String
  last_name: String
  username: String
  city: String
  state: String
  country: String
  company: String
  occupation: String
  created_on: Int
  url: String
  display_name: String
  images: OwnerUpdateimagesInput
  fields: OwnerUpdatefieldsInput
}

input OwnerUpdateManyInput {
  create: [OwnerCreateInput!]
  connect: [OwnerWhereUniqueInput!]
  disconnect: [OwnerWhereUniqueInput!]
  delete: [OwnerWhereUniqueInput!]
  update: [OwnerUpdateWithWhereUniqueNestedInput!]
  upsert: [OwnerUpsertWithWhereUniqueNestedInput!]
}

input OwnerUpdateWithWhereUniqueNestedInput {
  where: OwnerWhereUniqueInput!
  data: OwnerUpdateDataInput!
}

input OwnerUpsertWithWhereUniqueNestedInput {
  where: OwnerWhereUniqueInput!
  update: OwnerUpdateDataInput!
  create: OwnerCreateInput!
}

input OwnerWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [OwnerWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [OwnerWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  first_name: String
  """
  All values that are not equal to given value.
  """
  first_name_not: String
  """
  All values that are contained in given list.
  """
  first_name_in: [String!]
  """
  All values that are not contained in given list.
  """
  first_name_not_in: [String!]
  """
  All values less than the given value.
  """
  first_name_lt: String
  """
  All values less than or equal the given value.
  """
  first_name_lte: String
  """
  All values greater than the given value.
  """
  first_name_gt: String
  """
  All values greater than or equal the given value.
  """
  first_name_gte: String
  """
  All values containing the given string.
  """
  first_name_contains: String
  """
  All values not containing the given string.
  """
  first_name_not_contains: String
  """
  All values starting with the given string.
  """
  first_name_starts_with: String
  """
  All values not starting with the given string.
  """
  first_name_not_starts_with: String
  """
  All values ending with the given string.
  """
  first_name_ends_with: String
  """
  All values not ending with the given string.
  """
  first_name_not_ends_with: String
  last_name: String
  """
  All values that are not equal to given value.
  """
  last_name_not: String
  """
  All values that are contained in given list.
  """
  last_name_in: [String!]
  """
  All values that are not contained in given list.
  """
  last_name_not_in: [String!]
  """
  All values less than the given value.
  """
  last_name_lt: String
  """
  All values less than or equal the given value.
  """
  last_name_lte: String
  """
  All values greater than the given value.
  """
  last_name_gt: String
  """
  All values greater than or equal the given value.
  """
  last_name_gte: String
  """
  All values containing the given string.
  """
  last_name_contains: String
  """
  All values not containing the given string.
  """
  last_name_not_contains: String
  """
  All values starting with the given string.
  """
  last_name_starts_with: String
  """
  All values not starting with the given string.
  """
  last_name_not_starts_with: String
  """
  All values ending with the given string.
  """
  last_name_ends_with: String
  """
  All values not ending with the given string.
  """
  last_name_not_ends_with: String
  username: String
  """
  All values that are not equal to given value.
  """
  username_not: String
  """
  All values that are contained in given list.
  """
  username_in: [String!]
  """
  All values that are not contained in given list.
  """
  username_not_in: [String!]
  """
  All values less than the given value.
  """
  username_lt: String
  """
  All values less than or equal the given value.
  """
  username_lte: String
  """
  All values greater than the given value.
  """
  username_gt: String
  """
  All values greater than or equal the given value.
  """
  username_gte: String
  """
  All values containing the given string.
  """
  username_contains: String
  """
  All values not containing the given string.
  """
  username_not_contains: String
  """
  All values starting with the given string.
  """
  username_starts_with: String
  """
  All values not starting with the given string.
  """
  username_not_starts_with: String
  """
  All values ending with the given string.
  """
  username_ends_with: String
  """
  All values not ending with the given string.
  """
  username_not_ends_with: String
  city: String
  """
  All values that are not equal to given value.
  """
  city_not: String
  """
  All values that are contained in given list.
  """
  city_in: [String!]
  """
  All values that are not contained in given list.
  """
  city_not_in: [String!]
  """
  All values less than the given value.
  """
  city_lt: String
  """
  All values less than or equal the given value.
  """
  city_lte: String
  """
  All values greater than the given value.
  """
  city_gt: String
  """
  All values greater than or equal the given value.
  """
  city_gte: String
  """
  All values containing the given string.
  """
  city_contains: String
  """
  All values not containing the given string.
  """
  city_not_contains: String
  """
  All values starting with the given string.
  """
  city_starts_with: String
  """
  All values not starting with the given string.
  """
  city_not_starts_with: String
  """
  All values ending with the given string.
  """
  city_ends_with: String
  """
  All values not ending with the given string.
  """
  city_not_ends_with: String
  state: String
  """
  All values that are not equal to given value.
  """
  state_not: String
  """
  All values that are contained in given list.
  """
  state_in: [String!]
  """
  All values that are not contained in given list.
  """
  state_not_in: [String!]
  """
  All values less than the given value.
  """
  state_lt: String
  """
  All values less than or equal the given value.
  """
  state_lte: String
  """
  All values greater than the given value.
  """
  state_gt: String
  """
  All values greater than or equal the given value.
  """
  state_gte: String
  """
  All values containing the given string.
  """
  state_contains: String
  """
  All values not containing the given string.
  """
  state_not_contains: String
  """
  All values starting with the given string.
  """
  state_starts_with: String
  """
  All values not starting with the given string.
  """
  state_not_starts_with: String
  """
  All values ending with the given string.
  """
  state_ends_with: String
  """
  All values not ending with the given string.
  """
  state_not_ends_with: String
  country: String
  """
  All values that are not equal to given value.
  """
  country_not: String
  """
  All values that are contained in given list.
  """
  country_in: [String!]
  """
  All values that are not contained in given list.
  """
  country_not_in: [String!]
  """
  All values less than the given value.
  """
  country_lt: String
  """
  All values less than or equal the given value.
  """
  country_lte: String
  """
  All values greater than the given value.
  """
  country_gt: String
  """
  All values greater than or equal the given value.
  """
  country_gte: String
  """
  All values containing the given string.
  """
  country_contains: String
  """
  All values not containing the given string.
  """
  country_not_contains: String
  """
  All values starting with the given string.
  """
  country_starts_with: String
  """
  All values not starting with the given string.
  """
  country_not_starts_with: String
  """
  All values ending with the given string.
  """
  country_ends_with: String
  """
  All values not ending with the given string.
  """
  country_not_ends_with: String
  company: String
  """
  All values that are not equal to given value.
  """
  company_not: String
  """
  All values that are contained in given list.
  """
  company_in: [String!]
  """
  All values that are not contained in given list.
  """
  company_not_in: [String!]
  """
  All values less than the given value.
  """
  company_lt: String
  """
  All values less than or equal the given value.
  """
  company_lte: String
  """
  All values greater than the given value.
  """
  company_gt: String
  """
  All values greater than or equal the given value.
  """
  company_gte: String
  """
  All values containing the given string.
  """
  company_contains: String
  """
  All values not containing the given string.
  """
  company_not_contains: String
  """
  All values starting with the given string.
  """
  company_starts_with: String
  """
  All values not starting with the given string.
  """
  company_not_starts_with: String
  """
  All values ending with the given string.
  """
  company_ends_with: String
  """
  All values not ending with the given string.
  """
  company_not_ends_with: String
  occupation: String
  """
  All values that are not equal to given value.
  """
  occupation_not: String
  """
  All values that are contained in given list.
  """
  occupation_in: [String!]
  """
  All values that are not contained in given list.
  """
  occupation_not_in: [String!]
  """
  All values less than the given value.
  """
  occupation_lt: String
  """
  All values less than or equal the given value.
  """
  occupation_lte: String
  """
  All values greater than the given value.
  """
  occupation_gt: String
  """
  All values greater than or equal the given value.
  """
  occupation_gte: String
  """
  All values containing the given string.
  """
  occupation_contains: String
  """
  All values not containing the given string.
  """
  occupation_not_contains: String
  """
  All values starting with the given string.
  """
  occupation_starts_with: String
  """
  All values not starting with the given string.
  """
  occupation_not_starts_with: String
  """
  All values ending with the given string.
  """
  occupation_ends_with: String
  """
  All values not ending with the given string.
  """
  occupation_not_ends_with: String
  created_on: Int
  """
  All values that are not equal to given value.
  """
  created_on_not: Int
  """
  All values that are contained in given list.
  """
  created_on_in: [Int!]
  """
  All values that are not contained in given list.
  """
  created_on_not_in: [Int!]
  """
  All values less than the given value.
  """
  created_on_lt: Int
  """
  All values less than or equal the given value.
  """
  created_on_lte: Int
  """
  All values greater than the given value.
  """
  created_on_gt: Int
  """
  All values greater than or equal the given value.
  """
  created_on_gte: Int
  url: String
  """
  All values that are not equal to given value.
  """
  url_not: String
  """
  All values that are contained in given list.
  """
  url_in: [String!]
  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]
  """
  All values less than the given value.
  """
  url_lt: String
  """
  All values less than or equal the given value.
  """
  url_lte: String
  """
  All values greater than the given value.
  """
  url_gt: String
  """
  All values greater than or equal the given value.
  """
  url_gte: String
  """
  All values containing the given string.
  """
  url_contains: String
  """
  All values not containing the given string.
  """
  url_not_contains: String
  """
  All values starting with the given string.
  """
  url_starts_with: String
  """
  All values not starting with the given string.
  """
  url_not_starts_with: String
  """
  All values ending with the given string.
  """
  url_ends_with: String
  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  display_name: String
  """
  All values that are not equal to given value.
  """
  display_name_not: String
  """
  All values that are contained in given list.
  """
  display_name_in: [String!]
  """
  All values that are not contained in given list.
  """
  display_name_not_in: [String!]
  """
  All values less than the given value.
  """
  display_name_lt: String
  """
  All values less than or equal the given value.
  """
  display_name_lte: String
  """
  All values greater than the given value.
  """
  display_name_gt: String
  """
  All values greater than or equal the given value.
  """
  display_name_gte: String
  """
  All values containing the given string.
  """
  display_name_contains: String
  """
  All values not containing the given string.
  """
  display_name_not_contains: String
  """
  All values starting with the given string.
  """
  display_name_starts_with: String
  """
  All values not starting with the given string.
  """
  display_name_not_starts_with: String
  """
  All values ending with the given string.
  """
  display_name_ends_with: String
  """
  All values not ending with the given string.
  """
  display_name_not_ends_with: String
}

input OwnerWhereUniqueInput {
  id: ID
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
A connection to a list of items.
"""
type ProjectConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ProjectEdge]!
  aggregate: AggregateProject!
}

input ProjectCreatefieldsInput {
  set: [String!]
}

input ProjectCreateInput {
  name: String!
  published_on: Int!
  created_on: Int!
  modified_on: Int!
  url: String!
  mature_content: Int!
  fields: ProjectCreatefieldsInput
  owners: OwnerCreateManyInput
  stats: StatsCreateOneInput!
}

"""
An edge in a connection.
"""
type ProjectEdge {
  """
  The item at the end of the edge.
  """
  node: Project!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ProjectOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  published_on_ASC
  published_on_DESC
  created_on_ASC
  created_on_DESC
  modified_on_ASC
  modified_on_DESC
  url_ASC
  url_DESC
  mature_content_ASC
  mature_content_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ProjectPreviousValues {
  id: ID!
  name: String!
  published_on: Int!
  created_on: Int!
  modified_on: Int!
  url: String!
  fields: [String!]
  mature_content: Int!
}

type ProjectSubscriptionPayload {
  mutation: MutationType!
  node: Project
  updatedFields: [String!]
  previousValues: ProjectPreviousValues
}

input ProjectSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProjectSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProjectSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProjectWhereInput
}

input ProjectUpdatefieldsInput {
  set: [String!]
}

input ProjectUpdateInput {
  name: String
  published_on: Int
  created_on: Int
  modified_on: Int
  url: String
  mature_content: Int
  fields: ProjectUpdatefieldsInput
  owners: OwnerUpdateManyInput
  stats: StatsUpdateOneInput
}

input ProjectWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ProjectWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ProjectWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  published_on: Int
  """
  All values that are not equal to given value.
  """
  published_on_not: Int
  """
  All values that are contained in given list.
  """
  published_on_in: [Int!]
  """
  All values that are not contained in given list.
  """
  published_on_not_in: [Int!]
  """
  All values less than the given value.
  """
  published_on_lt: Int
  """
  All values less than or equal the given value.
  """
  published_on_lte: Int
  """
  All values greater than the given value.
  """
  published_on_gt: Int
  """
  All values greater than or equal the given value.
  """
  published_on_gte: Int
  created_on: Int
  """
  All values that are not equal to given value.
  """
  created_on_not: Int
  """
  All values that are contained in given list.
  """
  created_on_in: [Int!]
  """
  All values that are not contained in given list.
  """
  created_on_not_in: [Int!]
  """
  All values less than the given value.
  """
  created_on_lt: Int
  """
  All values less than or equal the given value.
  """
  created_on_lte: Int
  """
  All values greater than the given value.
  """
  created_on_gt: Int
  """
  All values greater than or equal the given value.
  """
  created_on_gte: Int
  modified_on: Int
  """
  All values that are not equal to given value.
  """
  modified_on_not: Int
  """
  All values that are contained in given list.
  """
  modified_on_in: [Int!]
  """
  All values that are not contained in given list.
  """
  modified_on_not_in: [Int!]
  """
  All values less than the given value.
  """
  modified_on_lt: Int
  """
  All values less than or equal the given value.
  """
  modified_on_lte: Int
  """
  All values greater than the given value.
  """
  modified_on_gt: Int
  """
  All values greater than or equal the given value.
  """
  modified_on_gte: Int
  url: String
  """
  All values that are not equal to given value.
  """
  url_not: String
  """
  All values that are contained in given list.
  """
  url_in: [String!]
  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]
  """
  All values less than the given value.
  """
  url_lt: String
  """
  All values less than or equal the given value.
  """
  url_lte: String
  """
  All values greater than the given value.
  """
  url_gt: String
  """
  All values greater than or equal the given value.
  """
  url_gte: String
  """
  All values containing the given string.
  """
  url_contains: String
  """
  All values not containing the given string.
  """
  url_not_contains: String
  """
  All values starting with the given string.
  """
  url_starts_with: String
  """
  All values not starting with the given string.
  """
  url_not_starts_with: String
  """
  All values ending with the given string.
  """
  url_ends_with: String
  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  mature_content: Int
  """
  All values that are not equal to given value.
  """
  mature_content_not: Int
  """
  All values that are contained in given list.
  """
  mature_content_in: [Int!]
  """
  All values that are not contained in given list.
  """
  mature_content_not_in: [Int!]
  """
  All values less than the given value.
  """
  mature_content_lt: Int
  """
  All values less than or equal the given value.
  """
  mature_content_lte: Int
  """
  All values greater than the given value.
  """
  mature_content_gt: Int
  """
  All values greater than or equal the given value.
  """
  mature_content_gte: Int
  owners_every: OwnerWhereInput
  owners_some: OwnerWhereInput
  owners_none: OwnerWhereInput
  stats: StatsWhereInput
}

input ProjectWhereUniqueInput {
  id: ID
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  projects(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Project]!
  owners(where: OwnerWhereInput, orderBy: OwnerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Owner]!
  statses(where: StatsWhereInput, orderBy: StatsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Stats]!
  user(where: UserWhereUniqueInput!): User
  project(where: ProjectWhereUniqueInput!): Project
  owner(where: OwnerWhereUniqueInput!): Owner
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  projectsConnection(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProjectConnection!
  ownersConnection(where: OwnerWhereInput, orderBy: OwnerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OwnerConnection!
  statsesConnection(where: StatsWhereInput, orderBy: StatsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StatsConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

type Stats {
  views: Int!
  appreciations: Int!
  comments: Int!
}

"""
A connection to a list of items.
"""
type StatsConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [StatsEdge]!
  aggregate: AggregateStats!
}

input StatsCreateInput {
  views: Int!
  appreciations: Int!
  comments: Int!
}

input StatsCreateOneInput {
  create: StatsCreateInput
}

"""
An edge in a connection.
"""
type StatsEdge {
  """
  The item at the end of the edge.
  """
  node: Stats!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum StatsOrderByInput {
  views_ASC
  views_DESC
  appreciations_ASC
  appreciations_DESC
  comments_ASC
  comments_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type StatsPreviousValues {
  views: Int!
  appreciations: Int!
  comments: Int!
}

type StatsSubscriptionPayload {
  mutation: MutationType!
  node: Stats
  updatedFields: [String!]
  previousValues: StatsPreviousValues
}

input StatsSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [StatsSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [StatsSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: StatsWhereInput
}

input StatsUpdateDataInput {
  views: Int
  appreciations: Int
  comments: Int
}

input StatsUpdateInput {
  views: Int
  appreciations: Int
  comments: Int
}

input StatsUpdateOneInput {
  create: StatsCreateInput
  disconnect: Boolean
  delete: Boolean
  update: StatsUpdateDataInput
  upsert: StatsUpsertNestedInput
}

input StatsUpsertNestedInput {
  update: StatsUpdateDataInput!
  create: StatsCreateInput!
}

input StatsWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [StatsWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [StatsWhereInput!]
  views: Int
  """
  All values that are not equal to given value.
  """
  views_not: Int
  """
  All values that are contained in given list.
  """
  views_in: [Int!]
  """
  All values that are not contained in given list.
  """
  views_not_in: [Int!]
  """
  All values less than the given value.
  """
  views_lt: Int
  """
  All values less than or equal the given value.
  """
  views_lte: Int
  """
  All values greater than the given value.
  """
  views_gt: Int
  """
  All values greater than or equal the given value.
  """
  views_gte: Int
  appreciations: Int
  """
  All values that are not equal to given value.
  """
  appreciations_not: Int
  """
  All values that are contained in given list.
  """
  appreciations_in: [Int!]
  """
  All values that are not contained in given list.
  """
  appreciations_not_in: [Int!]
  """
  All values less than the given value.
  """
  appreciations_lt: Int
  """
  All values less than or equal the given value.
  """
  appreciations_lte: Int
  """
  All values greater than the given value.
  """
  appreciations_gt: Int
  """
  All values greater than or equal the given value.
  """
  appreciations_gte: Int
  comments: Int
  """
  All values that are not equal to given value.
  """
  comments_not: Int
  """
  All values that are contained in given list.
  """
  comments_in: [Int!]
  """
  All values that are not contained in given list.
  """
  comments_not_in: [Int!]
  """
  All values less than the given value.
  """
  comments_lt: Int
  """
  All values less than or equal the given value.
  """
  comments_lte: Int
  """
  All values greater than the given value.
  """
  comments_gt: Int
  """
  All values greater than or equal the given value.
  """
  comments_gte: Int
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  project(where: ProjectSubscriptionWhereInput): ProjectSubscriptionPayload
  owner(where: OwnerSubscriptionWhereInput): OwnerSubscriptionPayload
  stats(where: StatsSubscriptionWhereInput): StatsSubscriptionPayload
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  name: String!
  email: String!
  password: String!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  email: String
  """
  All values that are not equal to given value.
  """
  email_not: String
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  """
  All values less than the given value.
  """
  email_lt: String
  """
  All values less than or equal the given value.
  """
  email_lte: String
  """
  All values greater than the given value.
  """
  email_gt: String
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  """
  All values containing the given string.
  """
  email_contains: String
  """
  All values not containing the given string.
  """
  email_not_contains: String
  """
  All values starting with the given string.
  """
  email_starts_with: String
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  """
  All values ending with the given string.
  """
  email_ends_with: String
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  password: String
  """
  All values that are not equal to given value.
  """
  password_not: String
  """
  All values that are contained in given list.
  """
  password_in: [String!]
  """
  All values that are not contained in given list.
  """
  password_not_in: [String!]
  """
  All values less than the given value.
  """
  password_lt: String
  """
  All values less than or equal the given value.
  """
  password_lte: String
  """
  All values greater than the given value.
  """
  password_gt: String
  """
  All values greater than or equal the given value.
  """
  password_gte: String
  """
  All values containing the given string.
  """
  password_contains: String
  """
  All values not containing the given string.
  """
  password_not_contains: String
  """
  All values starting with the given string.
  """
  password_starts_with: String
  """
  All values not starting with the given string.
  """
  password_not_starts_with: String
  """
  All values ending with the given string.
  """
  password_ends_with: String
  """
  All values not ending with the given string.
  """
  password_not_ends_with: String
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
